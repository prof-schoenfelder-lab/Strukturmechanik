/* ===============================
   Steps – kompakte Timeline
   Markup:
   <div class="steps">
     <div class="step">
       <p class="step-title">Titel</p>
       <figure>…</figure>
       <p>…</p>
     </div>
   </div>
   =============================== */

/* Stellschrauben */
:root{
  --gutter: 5px;                 /* Abstand des gesamten Blocks zur linken Seite (kleiner = weiter links) */
  --line-x: 20px;                 /* X-Position der Mittellinie im .steps-Container */
  --line-w: 3px;                  /* Linienbreite */
  --badge: 30px;                  /* Durchmesser des Zahlenkreises */
  --halo: 6px;                    /* weißer Halo um den Kreis (muss zum box-shadow passen) */
  --gap: 6px;                     /* zusätzlicher Abstand zwischen Kreis und Text */
  --blue: #2f6af6;                /* Kreis- & Titel-Farbe */
  --line: rgba(47,106,246,.20);   /* Linienfarbe */
}

/* Zähler nur im Wrapper */
.steps{
  position: relative;
  margin-left: var(--gutter);
  counter-reset: steps;
}

/* durchgehende vertikale Linie */
.steps::before{
  content:"";
  position:absolute;
  left: var(--line-x);
  top: 0;
  bottom: 0;
  width: var(--line-w);
  background: var(--line);
  border-radius: 2px;
  transform: translateX(-50%);
  z-index:0;
}

/* einzelner Step */
.step{
  position: relative;
  margin: 32px 0;
  /* Start des Inhalts NACH dem Kreis inkl. Halo + kleinem Gap → kein Überlappen */
  padding-left: calc(var(--line-x) + (var(--badge) / 2) + var(--halo) + var(--gap));
  counter-increment: steps;
  background: transparent;
  border: 0;
  box-shadow: none;
  z-index:1;
}

/* Nummern-Badge */
.step::before{
  content: counter(steps);
  position: absolute;
  top: 0;
  left: var(--line-x);
  transform: translate(-50%, 0);
  width: var(--badge);
  height: var(--badge);
  border-radius: 50%;
  background: var(--blue);
  color: #fff;
  font-weight: 600;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 0 0 var(--halo) #fff, 0 1px 0 rgba(0,0,0,.05);
  z-index:2;
}

/* Fallback: kurzer Segment, falls .step ohne Wrapper genutzt würde */
.step::after{
  content:"";
  position:absolute;
  left: var(--line-x);
  top: .5rem;
  bottom: .5rem;
  width: var(--line-w);
  background: var(--line);
  border-radius: 2px;
  transform: translateX(-50%);
  z-index:0;
}
.steps .step::after{ display:none; }

/* Titel ohne h2/h3: klein, fett, Versalien, in Kreisfarbe, vertikal zentriert */
.step .step-title{
  display: flex;
  align-items: center;          /* vertikal auf Kreismitte */
  min-height: var(--badge);     /* gleiche Höhe wie der Kreis */
  margin: 0 0 6px 0;
  font-weight: 700;             /* fett */
  font-size: 0.8rem;
  line-height: 1.15;
  text-transform: uppercase;
  letter-spacing: .03em;
  color: var(--blue);
}

/* Inhalte */
.step figure{ margin: 10px 0; text-align: center; }
.step img{ max-width: 100%; height: auto; border-radius: 6px; }
.step p{ margin: 0 0 12px 0; color: #222; line-height: 1.55; }

/* Responsive */
@media (max-width: 900px){
  :root{
    --gutter: 40px;   /* noch etwas weiter links auf kleineren Screens */
    --line-x: 18px;
    --badge: 28px;
    --gap: 6px;
  }
  .step{ margin: 26px 0; }
  .step .step-title{ margin-bottom: 6px; }
}

/* zentrierte Medien in <figure> innerhalb eines .step */
:root{
  /* optional: maximale Darstellungsbreite eines Bildes begrenzen */
  --figure-max: none; /* z.B. 640px oder 560px; 'none' = keine Begrenzung */
}

.step figure{
  width: 100%;
  margin: 12px 0;
  display: flex;                 /* zentrieren */
  justify-content: center;       /* horizontal mittig */
  align-items: center;           /* vertikal (falls z.B. SVG kleiner ist) */
  text-align: center;            /* für figcaption */
}

.step figure > img,
.step figure > picture,
.step figure > picture > img,
.step figure > video,
.step figure > canvas,
.step figure > svg{
  display: block;                /* vermeidet Extra-Abstand unter Bildern */
  max-width: min(100%, var(--figure-max));
  height: auto;
}

/* optional: Beschriftung mittig, dezenter */
.step figure > figcaption{
  margin-top: 6px;
  font-size: 0.9rem;
  color: #555;
  text-align: center;
}

/* Inline-Code aus `...` innerhalb der Steps hervorheben */
:root{
  --code-bg: rgba(47,106,246,.10);   /* zarter Blau-Ton */
  --code-border: rgba(47,106,246,.22);
  --code-color: #1a3ba8;             /* gut lesbares Blau */
  --code-radius: 6px;
  --code-pad-y: .12em;
  --code-pad-x: .40em;
}

/* Nur inline, nicht in <pre> */
.step :not(pre) > code{
  background: var(--code-bg);
  color: var(--code-color);
  padding: var(--code-pad-y) var(--code-pad-x);
  border: 1px solid var(--code-border);
  border-radius: var(--code-radius);
  font: 0.95em/1.25 ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace;
  white-space: normal;            /* darf umbrechen */
  word-break: break-word;         /* lange Tokens trennen */
}

/* Code-Blöcke (``` … ```), falls du sie nutzt */
.step pre{
  margin: 10px 0 12px;
  background: rgba(47,106,246,.06);
  border: 1px solid var(--code-border);
  border-radius: 8px;
  padding: 12px 14px;
  overflow: auto;                 /* horizontales Scrollen bei Bedarf */
}
.step pre > code{
  background: transparent;
  border: 0;
  padding: 0;
  color: #222;
  white-space: pre;               /* keine Zeilenumbrüche erzwingen */
}

/* Optional: Inline-Code auch in Titeln konsistent darstellen */
.step .step-title code{
  background: rgba(47,106,246,.14);
  border-color: rgba(47,106,246,.28);
  color: #0f2f8a;
}
